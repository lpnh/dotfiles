#            ▄▀▀ █   █ ▄▀▄ ▀▄▀
#            ▄██ ▀▄▀▄▀ █▀█  █ 
#
#    ▄▄·          ▐ ▄  ·▄▄▄ ▪    ▄▄ • 
#   ▐█ ▌▪  ▄█▀▄  •█▌▐█ ▐▄▄  ██  ▐█ ▀ ▪
#   ██ ▄▄ ▐█▌.▐▌ ▐█▐▐▌ █  ▪ ▐█· ▄█ ▀█▄
#   ▐███▌ ▐█▌.▐▌ ██▐█▌ ██ . ▐█▌ ▐█▄▪▐█
#   ·▀▀▀   ▀█▄▀▪ ▀▀ █▪ ▀▀▀  ▀▀▀ ·▀▀▀▀ 
#

# Read `man 5 sway` for a complete reference

# Import theme
include catppuccin-mocha

# Variables {{{

# Super
set $mod Mod4

# Workspace Icons
set $wst 
set $wsy 
set $wss 
set $wsd 󰙯
set $wsp 
set $wsf 󰈹

# Vi Keys
set $left h
set $down j
set $up k
set $right l

# Apps
set $term alacritty
set $menu fuzzel | xargs swaymsg exec --

# : }}}

# UI {{{

# Wallpaper
output * bg ~/.config/assets/stars.png fill

# Borders
default_border pixel 2
default_floating_border pixel 2

# Gaps
gaps inner 4
gaps outer 5

# target                 title     bg    text   indicator  border
client.focused           $maroon   $base $text  $maroon    $maroon
client.focused_inactive  $overlay0 $base $text  $overlay0  $overlay0
client.unfocused         $overlay0 $base $text  $overlay0  $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach

# client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
# client.background        $base

# Status bar
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

# }}}

# Input/Output {{{

# To get the input names: swaymsg -t get_inputs
# Read `man 5 sway-input`
input type:keyboard {
    xkb_layout "us"
    xkb_options "grp:alt_shift_toggle,compose:ralt"
}

# To get the output names: swaymsg -t get_outputs

# }}}

# Key bindings {{{

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Volume
    bindsym XF86AudioRaiseVolume exec wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+
    bindsym XF86AudioLowerVolume exec wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%-
    bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

    # Screenshot
    bindsym Print exec cosmic-screenshot

    # Start apps 
    bindsym $mod+1 exec $term
    bindsym $mod+2 exec firefox
    bindsym $mod+y exec $term -e yazi
    bindsym $mod+n exec $term -e ~/apps/nvim/bin/nvim
    bindsym $mod+s exec $term --class ncspot -e ncspot
    bindsym $mod+d exec webcord

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+a exec $menu

    # Lock session
    bindsym Pause exec 'swaylock'

    # Exit sway
    bindsym $mod+Shift+e exec 'swaymsg exit'

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    # Switch to workspace
    bindsym $mod+7 workspace $wst
    bindsym $mod+F1 workspace $wst
    bindsym Shift+F1 workspace $wst
    bindsym $mod+8 workspace $wsy
    bindsym $mod+F2 workspace $wsy
    bindsym Shift+F2 workspace $wsy
    bindsym $mod+9 workspace $wss
    bindsym $mod+F3 workspace $wss
    bindsym Shift+F3 workspace $wss
    bindsym $mod+F4 workspace $wsd
    bindsym Shift+F4 workspace $wsd
    bindsym $mod+F5 workspace $wsp
    bindsym Shift+F5 workspace $wsp
    bindsym $mod+0 workspace $wsf

    # Move focused container to workspace
    bindsym $mod+Shift+F1 move container to workspace $wst
    bindsym $mod+Shift+F2 move container to workspace $wsy
    bindsym $mod+Shift+F3 move container to workspace $wss
    bindsym $mod+Shift+F4 move container to workspace $wsd
    bindsym $mod+Shift+F5 move container to workspace $wsp
    bindsym $mod+Shift+0 move container to workspace $wsf

    # Move to next / previous workspace
    bindsym $mod+Alt+l workspace next
    bindsym $mod+Alt+h workspace prev

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+e layout toggle split
    bindsym $mod+w layout tabbed

    # Make the current focus fullscreen
    bindsym F11 fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+p focus parent

    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# }}}

# Core {{{

# Center mouse in container on focus shift
mouse_warping container

# Attaching workspaces to outputs
workspace $wst output HMDI-A-1
workspace $wsy output HMDI-A-1
workspace $wss output HMDI-A-1
workspace $wsd output HMDI-A-1
workspace $wsp output HMDI-A-1
workspace $wsf output DP-2

# Window Rules
assign [app_id="ncspot"] workspace $wss
assign [class="WebCord"] workspace $wsd

# Enable idle inhibitor for fullscreen firefox windows
for_window [app_id="firefox"] inhibit_idle fullscreen

# }}}

# Exec {{{

# Autostart Apps
exec swaymsg "workspace $wsf; exec firefox;"

# Notification
exec --no-startup-id 'dunst'

# Idle
exec swayidle -w \
    timeout 300 'dim && swaylock -f' \
    timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -f'

# Night Light
exec wlsunset -l -22.7 -L -47.6

# Set and export the custom paths
exec export PATH=$PATH:$HOME/.cargo/bin && \
    systemctl --user import-environment PATH

# Set SSH_AUTH_SOCK environment variable
exec systemctl --user set-environment SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/ssh-agent.socket

# Enable and start ssh-agent service
exec systemctl --user enable ssh-agent.service
exec systemctl --user start ssh-agent.service

# Upstream refuses to set XDG_CURRENT_DESKTOP so we have to
exec systemctl --user set-environment XDG_CURRENT_DESKTOP=sway

# Import environment variables
exec systemctl --user import-environment DISPLAY \
                                         SWAYSOCK \
                                         WAYLAND_DISPLAY \
                                         XDG_CURRENT_DESKTOP \
                                         SSH_AUTH_SOCK \
                                         XDG_SESSION_TYPE

# Update environment for dbus
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY \
                                                  SWAYSOCK \
                                                  XDG_CURRENT_DESKTOP=sway \
                                                  WAYLAND_DISPLAY \
                                                  SSH_AUTH_SOCK \
                                                  XDG_SESSION_TYPE

# Start sway-session.target
exec systemctl --user start sway-session.target

# }}}

focus output HDMI-A-1
workspace $wst
exec $term

# vim:fileencoding=utf-8:ft=config:fdm=marker
